!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AR	Makefile	/^AR = ar -cr$/;"	m
Bucket	src/strmap.c	/^struct Bucket {$/;"	s	file:
Bucket	src/strmap.c	/^typedef struct Bucket Bucket;$/;"	t	typeref:struct:Bucket	file:
CC	Makefile	/^CC = gcc$/;"	m
CFG_CONTENT_LENGTH_LIMIT	include/nssweb_config.h	/^#define CFG_CONTENT_LENGTH_LIMIT /;"	d
CFG_HTTP_HEADER_ENTITY_LENGTH	include/nssweb_config.h	/^#define CFG_HTTP_HEADER_ENTITY_LENGTH /;"	d
CFG_HTTP_HEADER_LINE_LENGTH	include/nssweb_config.h	/^#define CFG_HTTP_HEADER_LINE_LENGTH /;"	d
CFG_MAX_BUFFER_LENGTH	include/nssweb_config.h	/^#define CFG_MAX_BUFFER_LENGTH	/;"	d
CFG_QS_ENTRY_LIMIT	include/nssweb_config.h	/^#define CFG_QS_ENTRY_LIMIT /;"	d
CFG_QS_KEY_LENGTH	include/nssweb_config.h	/^#define CFG_QS_KEY_LENGTH /;"	d
CFG_QS_VALUE_LENGTH	include/nssweb_config.h	/^#define CFG_QS_VALUE_LENGTH /;"	d
CFG_QUERY_STRING_LIMIT	include/nssweb_config.h	/^#define CFG_QUERY_STRING_LIMIT /;"	d
CFG_REQUEST_URI_LENGTH	include/nssweb_config.h	/^#define CFG_REQUEST_URI_LENGTH /;"	d
CFLAGS	Makefile	/^CFLAGS = -fPIC -ggdb3 -I$(INCDIR) -Wall$/;"	m
CONTENT_TYPE_TEXT_HTML	include/nsshttp_content_type.h	/^#define CONTENT_TYPE_TEXT_HTML	/;"	d
CONTENT_TYPE_TEXT_PLAIN	include/nsshttp_content_type.h	/^#define CONTENT_TYPE_TEXT_PLAIN	/;"	d
CONTINUE_NO	include/nssweb_types.h	/^#define CONTINUE_NO	/;"	d
CONTINUE_YES	include/nssweb_types.h	/^#define CONTINUE_YES	/;"	d
DEBUG	include/nssweb_config.h	/^#define DEBUG(/;"	d
ENV_SCRIPT_FILENAME	include/nsshttp.h	/^#define ENV_SCRIPT_FILENAME	/;"	d
ERR_FATAL_NO	include/nsstemplate.h	/^#define ERR_FATAL_NO	/;"	d
ERR_FATAL_YES	include/nsstemplate.h	/^#define ERR_FATAL_YES	/;"	d
ERR_TPL_CONTENT_NO	include/nsstemplate.h	/^#define ERR_TPL_CONTENT_NO	/;"	d
ERR_TPL_CONTENT_YES	include/nsstemplate.h	/^#define ERR_TPL_CONTENT_YES	/;"	d
HTTPIO_HEADER_FINISH	include/nsshttpio.h	/^#define HTTPIO_HEADER_FINISH /;"	d
HTTPIO_HEADER_LINE_ENDING	include/nsshttpio.h	/^#define HTTPIO_HEADER_LINE_ENDING /;"	d
HTTPIO_LINE_ENDING	include/nsshttpio.h	/^#define HTTPIO_LINE_ENDING /;"	d
HTTPSTATLINE_INTERNAL_SERVER_ERROR	include/nsshttp_status.h	/^#define HTTPSTATLINE_INTERNAL_SERVER_ERROR	/;"	d
HTTPSTATLINE_NO_STATUS	include/nsshttp_status.h	/^#define HTTPSTATLINE_NO_STATUS	/;"	d
HTTPSTATLINE_OK	include/nsshttp_status.h	/^#define HTTPSTATLINE_OK	/;"	d
HTTPSTAT_BAD_REQUEST	include/nsshttp_status.h	/^#define HTTPSTAT_BAD_REQUEST	/;"	d
HTTPSTAT_FILE_NOT_FOUND	include/nsshttp_status.h	/^#define HTTPSTAT_FILE_NOT_FOUND	/;"	d
HTTPSTAT_FORBIDDEN	include/nsshttp_status.h	/^#define HTTPSTAT_FORBIDDEN	/;"	d
HTTPSTAT_FOUND	include/nsshttp_status.h	/^#define HTTPSTAT_FOUND /;"	d
HTTPSTAT_GET_LINE	include/nsshttp_status.h	/^#define HTTPSTAT_GET_LINE(/;"	d
HTTPSTAT_HTTP_VERSION_NOT_SUPPORTED	include/nsshttp_status.h	/^#define HTTPSTAT_HTTP_VERSION_NOT_SUPPORTED	/;"	d
HTTPSTAT_INTERNAL_SERVER_ERROR	include/nsshttp_status.h	/^#define HTTPSTAT_INTERNAL_SERVER_ERROR	/;"	d
HTTPSTAT_IS_NO_STATUS	include/nsshttp_status.h	/^#define HTTPSTAT_IS_NO_STATUS(/;"	d
HTTPSTAT_LENGTH_REQUIRED	include/nsshttp_status.h	/^#define HTTPSTAT_LENGTH_REQUIRED	/;"	d
HTTPSTAT_MOVED	include/nsshttp_status.h	/^#define HTTPSTAT_MOVED	/;"	d
HTTPSTAT_NOT_ALLOWED	include/nsshttp_status.h	/^#define HTTPSTAT_NOT_ALLOWED	/;"	d
HTTPSTAT_NOT_IMPLEMENTED	include/nsshttp_status.h	/^#define HTTPSTAT_NOT_IMPLEMENTED	/;"	d
HTTPSTAT_NOT_MODIFIED	include/nsshttp_status.h	/^#define HTTPSTAT_NOT_MODIFIED	/;"	d
HTTPSTAT_NO_STATUS	include/nsshttp_status.h	/^#define HTTPSTAT_NO_STATUS	/;"	d
HTTPSTAT_OK	include/nsshttp_status.h	/^#define HTTPSTAT_OK	/;"	d
HTTPSTAT_REDIRECT	include/nsshttp_status.h	/^#define HTTPSTAT_REDIRECT	/;"	d
HTTPSTAT_REQUEST_ENTITY_TOO_LARGE	include/nsshttp_status.h	/^#define HTTPSTAT_REQUEST_ENTITY_TOO_LARGE	/;"	d
HTTPSTAT_REQUEST_URI_TOO_LONG	include/nsshttp_status.h	/^#define HTTPSTAT_REQUEST_URI_TOO_LONG	/;"	d
HTTPSTAT_SERVICE_UNAVAILABLE	include/nsshttp_status.h	/^#define HTTPSTAT_SERVICE_UNAVAILABLE	/;"	d
HTTPSTAT_UNAUTHORIZED	include/nsshttp_status.h	/^#define HTTPSTAT_UNAUTHORIZED	/;"	d
HTTP_CONTENT_TYPE_SET	include/nsshttp_content_type.h	/^#define HTTP_CONTENT_TYPE_SET(/;"	d
HTTP_ERROR_FATAL_NO	include/nsshttp.h	/^#define HTTP_ERROR_FATAL_NO	/;"	d
HTTP_ERROR_FATAL_YES	include/nsshttp.h	/^#define HTTP_ERROR_FATAL_YES	/;"	d
HTTP_ERROR_SOURCE_CLIENT	include/nsshttp.h	/^#define HTTP_ERROR_SOURCE_CLIENT	/;"	d
HTTP_ERROR_SOURCE_SERVER	include/nsshttp.h	/^#define HTTP_ERROR_SOURCE_SERVER	/;"	d
HTTP_ERRSTR_LENGTH	include/nsshttp.h	/^#define HTTP_ERRSTR_LENGTH	/;"	d
HTTP_HEADER_CONTENT_TYPE	include/nsshttp.h	/^#define HTTP_HEADER_CONTENT_TYPE	/;"	d
HTTP_HEADER_STATUS	include/nsshttp.h	/^#define HTTP_HEADER_STATUS	/;"	d
HTTP_STATUS_INTERNAL_SERVER_ERROR	include/nsshttp_status.h	/^#define HTTP_STATUS_INTERNAL_SERVER_ERROR	/;"	d
HTTP_STATUS_LINE_LENGTH	include/nsshttp_status.h	/^#define HTTP_STATUS_LINE_LENGTH /;"	d
HTTP_STATUS_OK	include/nsshttp_status.h	/^#define HTTP_STATUS_OK /;"	d
HTTP_UNKNOWN_ERROR	include/nsshttp.h	/^#define HTTP_UNKNOWN_ERROR	/;"	d
INCDIR	Makefile	/^INCDIR = .\/include$/;"	m
INITIAL_MUTABLE_STRING_ALLOCATION	include/nss_mutable_string.h	/^#define INITIAL_MUTABLE_STRING_ALLOCATION	/;"	d
INIT_HTTP_CONTENT_TYPE	include/nsshttp_content_type.h	/^#define INIT_HTTP_CONTENT_TYPE(/;"	d
INIT_HTTP_CONTEXT_T	include/nsshttp.h	/^#define INIT_HTTP_CONTEXT_T(/;"	d
INIT_HTTP_ERROR_T	include/nsshttp.h	/^#define INIT_HTTP_ERROR_T(/;"	d
INIT_HTTP_REQUEST_HEADER_T	include/nsshttp.h	/^#define INIT_HTTP_REQUEST_HEADER_T(/;"	d
INIT_HTTP_RESPONSE_HEADER_T	include/nsshttp.h	/^#define INIT_HTTP_RESPONSE_HEADER_T(/;"	d
INIT_HTTP_STATUS_CODE_T	include/nsshttp_status.h	/^#define INIT_HTTP_STATUS_CODE_T(/;"	d
INIT_HTTP_STATUS_LINE_T	include/nsshttp_status.h	/^#define INIT_HTTP_STATUS_LINE_T(/;"	d
INIT_HTTP_STATUS_T	include/nsshttp_status.h	/^#define INIT_HTTP_STATUS_T(/;"	d
INIT_QS_ENTRY_T	include/nsshttp.h	/^#define INIT_QS_ENTRY_T(/;"	d
INIT_QUERY_STRING_T	include/nsshttp.h	/^#define INIT_QUERY_STRING_T(/;"	d
INIT_TEMPLATE_CONTEXT_T	include/nsstemplate.h	/^#define INIT_TEMPLATE_CONTEXT_T(/;"	d
INIT_TEMPLATE_ERROR_T	include/nsstemplate.h	/^#define INIT_TEMPLATE_ERROR_T(/;"	d
LIBDIR	Makefile	/^LIBDIR = .\/lib$/;"	m
LIBNSSHTTP_OBJS	Makefile	/^LIBNSSHTTP_OBJS = $(OBJDIR)\/nsshttp.o $(OBJDIR)\/nsshttpio.o$/;"	m
LIBNSSHTTP_SRCS	Makefile	/^LIBNSSHTTP_SRCS = $(SRCDIR)\/nsshttp.c $(SRCDIR)\/nsshttpio.c$/;"	m
LIBNSSTEMPLATE_OBJS	Makefile	/^LIBNSSTEMPLATE_OBJS = $(OBJDIR)\/nsstemplate.o $(OBJDIR)\/nsstemplate_markup.o $(OBJDIR)\/strmap.o $(SRCDIR)\/nss_mutable_string.o$/;"	m
LIBNSSTEMPLATE_SRCS	Makefile	/^LIBNSSTEMPLATE_SRCS = $(SRCDIR)\/nsstemplate.c $(SRCDIR)\/strmap.c $(SRCDIR)\/nss_mutable_string.c$/;"	m
LIBS	Makefile	/^LIBS = $(LIBDIR)\/libnsshttp.a $(LIBDIR)\/libnsstemplate.a$/;"	m
MAKE_HTTP_STATUS	include/nsshttp_status.h	/^#define MAKE_HTTP_STATUS(/;"	d
MAXIMUM_MUTABLE_STRING_SIZE	include/nss_mutable_string.h	/^#define MAXIMUM_MUTABLE_STRING_SIZE	/;"	d
MUTSTR	include/nss_mutable_string.h	/^#define MUTSTR(/;"	d
NST_KEYWORD_IF_ELSE	include/nsstemplate_markup.h	/^#define NST_KEYWORD_IF_ELSE	/;"	d
NST_KEYWORD_IF_START	include/nsstemplate_markup.h	/^#define NST_KEYWORD_IF_START	/;"	d
NST_KEYWORD_IF_STOP	include/nsstemplate_markup.h	/^#define NST_KEYWORD_IF_STOP	/;"	d
NST_KEYWORD_LOOP_CONDITION	include/nsstemplate_markup.h	/^#define NST_KEYWORD_LOOP_CONDITION	/;"	d
NST_KEYWORD_LOOP_START	include/nsstemplate_markup.h	/^#define NST_KEYWORD_LOOP_START	/;"	d
NST_KEYWORD_LOOP_STOP	include/nsstemplate_markup.h	/^#define NST_KEYWORD_LOOP_STOP	/;"	d
NST_MARKUPSTART_LEFT	include/nsstemplate_markup.h	/^#define NST_MARKUPSTART_LEFT	/;"	d
NST_MARKUPSTART_RIGHT	include/nsstemplate_markup.h	/^#define NST_MARKUPSTART_RIGHT	/;"	d
NST_MARKUPSTOP_LEFT	include/nsstemplate_markup.h	/^#define NST_MARKUPSTOP_LEFT	/;"	d
NST_MARKUPSTOP_RIGHT	include/nsstemplate_markup.h	/^#define NST_MARKUPSTOP_RIGHT	/;"	d
NST_MAX_BUFFER	include/nsstemplate_markup.h	/^#define NST_MAX_BUFFER	/;"	d
NST_OPERATOR_ASSIGN	include/nsstemplate_markup.h	/^#define NST_OPERATOR_ASSIGN	/;"	d
NST_OPERATOR_EQ	include/nsstemplate_markup.h	/^#define NST_OPERATOR_EQ	/;"	d
OBJDIR	Makefile	/^OBJDIR = .\/obj$/;"	m
PATH_LENGTH	include/nsshttp.h	/^#define PATH_LENGTH /;"	d
Pair	src/strmap.c	/^struct Pair {$/;"	s	file:
Pair	src/strmap.c	/^typedef struct Pair Pair;$/;"	t	typeref:struct:Pair	file:
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
RM	Makefile	/^RM = rm -f$/;"	m
SRCDIR	Makefile	/^SRCDIR = .\/src$/;"	m
StrMap	include/strmap.h	/^typedef struct StrMap StrMap;$/;"	t	typeref:struct:StrMap
StrMap	src/strmap.c	/^struct StrMap {$/;"	s	file:
TEMPLATE_CHECK_ERROR	include/nsstemplate.h	/^#define TEMPLATE_CHECK_ERROR(/;"	d
TESTDIR	Makefile	/^TESTDIR = .\/tests$/;"	m
TESTS	Makefile	/^TESTS = $(TESTDIR)\/template1.test$/;"	m
TESTS_CFLAGS	Makefile	/^TESTS_CFLAGS = -L$(LIBDIR) -lc -lnsstemplate$/;"	m
TESTS_OBJS	Makefile	/^TESTS_OBJS = $(OBJDIR)\/template1.o$/;"	m
TESTS_SRCS	Makefile	/^TESTS_SRCS = $(TESTDIR)\/template1.c$/;"	m
TPL_BUFFER_LENGTH	include/nsstemplate.h	/^#define TPL_BUFFER_LENGTH	/;"	d
TPL_ERRSTR_LENGTH	include/nsstemplate.h	/^#define TPL_ERRSTR_LENGTH	/;"	d
TPL_FILE_PATH_LENGTH	include/nsstemplate.h	/^#define TPL_FILE_PATH_LENGTH /;"	d
_STRMAP_H_	include/strmap.h	/^#define _STRMAP_H_$/;"	d
__NSSHTTPIO_H__	include/nsshttpio.h	/^#define __NSSHTTPIO_H__$/;"	d
__NSSHTTP_CONTENT_TYPE_H__	include/nsshttp_content_type.h	/^#define __NSSHTTP_CONTENT_TYPE_H__$/;"	d
__NSSHTTP_C__	src/nsshttp.c	/^#define __NSSHTTP_C__$/;"	d	file:
__NSSHTTP_H__	include/nsshttp.h	/^#define __NSSHTTP_H__$/;"	d
__NSSHTTP_STATUS_H__	include/nsshttp_status.h	/^#define __NSSHTTP_STATUS_H__$/;"	d
__NSSTEMPLATE_H__	include/nsstemplate.h	/^#define __NSSTEMPLATE_H__$/;"	d
__NSSTEMPLATE_MARKUP_H__	include/nsstemplate_markup.h	/^#define __NSSTEMPLATE_MARKUP_H__$/;"	d
__NSSWEB_CONFIG_H__	include/nssweb_config.h	/^#define __NSSWEB_CONFIG_H__$/;"	d
__NSSWEB_H__	include/nssweb.h	/^#define __NSSWEB_H__$/;"	d
__NSSWEB_TYPES_H__	include/nssweb_types.h	/^#define __NSSWEB_TYPES_H__$/;"	d
__NSS_MUTABLE_STRING_H__	include/nss_mutable_string.h	/^#define __NSS_MUTABLE_STRING_H__$/;"	d
_calculate_new_size	src/nss_mutable_string.c	/^inline size_t _calculate_new_size(size_t str_length) {$/;"	f
_data_size	include/nss_mutable_string.h	/^	size_t _data_size;$/;"	m	struct:__anon1
_tpl_symbols	src/nsstemplate_markup.c	/^static StrMap *_tpl_symbols;$/;"	v	file:
base_path	include/nsstemplate.h	/^	char base_path[TPL_FILE_PATH_LENGTH];$/;"	m	struct:__anon10
buckets	src/strmap.c	/^	Bucket *buckets;$/;"	m	struct:StrMap	file:
buffer	include/nsstemplate.h	/^	mutable_string_t buffer;$/;"	m	struct:__anon10
content_type	include/nsshttp.h	/^	char content_type[CFG_CONTENT_LENGTH_LIMIT];$/;"	m	struct:__anon5
continue_t	include/nssweb_types.h	/^typedef short continue_t;$/;"	t
count	src/strmap.c	/^	unsigned int count;$/;"	m	struct:Bucket	file:
count	src/strmap.c	/^	unsigned int count;$/;"	m	struct:StrMap	file:
data	include/nss_mutable_string.h	/^	char *data;$/;"	m	struct:__anon1
entries	include/nsshttp.h	/^	qs_entry_t entries[CFG_QS_ENTRY_LIMIT];$/;"	m	struct:__anon3
entries_len	include/nsshttp.h	/^	int entries_len;$/;"	m	struct:__anon3
err	include/nsshttp.h	/^	http_error_t err;$/;"	m	struct:__anon7
err	include/nsstemplate.h	/^	template_error_t err;$/;"	m	struct:__anon10
errnum	include/nsshttp.h	/^	int errnum;$/;"	m	struct:__anon6
errnum	include/nsstemplate.h	/^	int errnum;$/;"	m	struct:__anon9
error_source	include/nsshttp.h	/^	int error_source;$/;"	m	struct:__anon6
errstr	include/nsshttp.h	/^	char errstr[HTTP_ERRSTR_LENGTH];$/;"	m	struct:__anon6
errstr	include/nsstemplate.h	/^	char errstr[TPL_ERRSTR_LENGTH];$/;"	m	struct:__anon9
get_pair	src/strmap.c	/^static Pair * get_pair(Bucket *bucket, const char *key)$/;"	f	file:
hash	src/strmap.c	/^static unsigned long hash(const char *str)$/;"	f	file:
heading	tests/template1.c	/^#define heading	/;"	d	file:
http_context_t	include/nsshttp.h	/^} http_context_t;$/;"	t	typeref:struct:__anon7
http_die	src/nsshttp.c	/^void http_die(http_context_t *ctx, char* errmsg) {$/;"	f
http_error_t	include/nsshttp.h	/^} http_error_t;$/;"	t	typeref:struct:__anon6
http_finish	src/nsshttp.c	/^continue_t http_finish(http_context_t *ctx) {$/;"	f
http_init	src/nsshttp.c	/^continue_t http_init(http_context_t *ctx, FILE* stream) {$/;"	f
http_output	src/nsshttp.c	/^continue_t http_output($/;"	f
http_request_header_t	include/nsshttp.h	/^} http_request_header_t;$/;"	t	typeref:struct:__anon4
http_response_header_t	include/nsshttp.h	/^} http_response_header_t;$/;"	t	typeref:struct:__anon5
http_set_content_type	src/nsshttp.c	/^void http_set_content_type(http_context_t *ctx, const char* cnt_type) {$/;"	f
http_set_status	src/nsshttp.c	/^void http_set_status(http_context_t *ctx, http_status_t to_assign) {$/;"	f
http_status_t	include/nsshttp_status.h	/^} http_status_t;$/;"	t	typeref:struct:__anon8
httpio_finish_headers	src/nsshttpio.c	/^int httpio_finish_headers(FILE* stream) {$/;"	f
httpio_finish_output	src/nsshttpio.c	/^void httpio_finish_output(FILE* stream) {$/;"	f
httpio_print_header	src/nsshttpio.c	/^int httpio_print_header(FILE* stream, const char* field, const char* value) {$/;"	f
in_markup	include/nsstemplate.h	/^	char in_markup;$/;"	m	struct:__anon10
instream	include/nsstemplate.h	/^	FILE* instream;$/;"	m	struct:__anon10
is_empty	include/nss_mutable_string.h	/^	char is_empty;$/;"	m	struct:__anon1
is_fatal	include/nsshttp.h	/^	int is_fatal;$/;"	m	struct:__anon6
is_fatal	include/nsstemplate.h	/^	short is_fatal;$/;"	m	struct:__anon9
is_template_content	include/nsstemplate.h	/^	short is_template_content;$/;"	m	struct:__anon9
key	include/nsshttp.h	/^	char key[CFG_QS_KEY_LENGTH];$/;"	m	struct:__anon2
key	src/strmap.c	/^	char *key;$/;"	m	struct:Pair	file:
key_len	include/nsshttp.h	/^	int key_len;$/;"	m	struct:__anon2
length	include/nss_mutable_string.h	/^	int length;$/;"	m	struct:__anon1
line	include/nsshttp_status.h	/^	char line[HTTP_STATUS_LINE_LENGTH];$/;"	m	struct:__anon8
main	tests/template1.c	/^int main(int argc, char *argv[]) {$/;"	f
markup_find_token	src/nsstemplate_markup.c	/^char* markup_find_token(const char *buffer, const char *token) {$/;"	f
markup_get_start_left	include/nsstemplate_markup.h	/^#define markup_get_start_left(/;"	d
markup_get_start_right	include/nsstemplate_markup.h	/^#define markup_get_start_right(/;"	d
markup_get_stop_left	include/nsstemplate_markup.h	/^#define markup_get_stop_left(/;"	d
markup_get_stop_right	include/nsstemplate_markup.h	/^#define markup_get_stop_right(/;"	d
markup_has_left_token	src/nsstemplate_markup.c	/^char * markup_has_left_token(const char *haystack) {$/;"	f
markup_which_token_is_this	src/nsstemplate_markup.c	/^const char* markup_which_token_is_this(const char *buffer) {$/;"	f
mutable_string_append	src/nss_mutable_string.c	/^mutable_string_t* mutable_string_append(mutable_string_t *dest, char *src) {$/;"	f
mutable_string_assign	src/nss_mutable_string.c	/^mutable_string_t* mutable_string_assign(mutable_string_t *dest, char *src) {$/;"	f
mutable_string_copy	src/nss_mutable_string.c	/^mutable_string_t* mutable_string_copy(mutable_string_t *dest, mutable_string_t *src)$/;"	f
mutable_string_free	src/nss_mutable_string.c	/^void mutable_string_free(mutable_string_t *target) {$/;"	f
mutable_string_get_data	src/nss_mutable_string.c	/^char* mutable_string_get_data(mutable_string_t *var) {$/;"	f
mutable_string_get_length	src/nss_mutable_string.c	/^int mutable_string_get_length(mutable_string_t *var) {$/;"	f
mutable_string_init	src/nss_mutable_string.c	/^mutable_string_t* mutable_string_init(mutable_string_t *target) {$/;"	f
mutable_string_is_empty	src/nss_mutable_string.c	/^short mutable_string_is_empty(mutable_string_t *var) {$/;"	f
mutable_string_resize	src/nss_mutable_string.c	/^mutable_string_t* mutable_string_resize(mutable_string_t* target, size_t new_size)$/;"	f
mutable_string_t	include/nss_mutable_string.h	/^} mutable_string_t;$/;"	t	typeref:struct:__anon1
pairs	src/strmap.c	/^	Pair *pairs;$/;"	m	struct:Bucket	file:
path_separator	include/nsstemplate.h	/^static char path_separator = '\/';$/;"	v
path_separator	src/nsshttp.c	/^static char path_separator = '\/';$/;"	v	file:
qs_entry_t	include/nsshttp.h	/^} qs_entry_t;$/;"	t	typeref:struct:__anon2
query_string	include/nsshttp.h	/^	query_string_t query_string;$/;"	m	struct:__anon7
query_string_t	include/nsshttp.h	/^} query_string_t;$/;"	t	typeref:struct:__anon3
request_header	include/nsshttp.h	/^	http_request_header_t request_header;$/;"	m	struct:__anon7
request_uri	include/nsshttp.h	/^	char request_uri[CFG_REQUEST_URI_LENGTH];$/;"	m	struct:__anon4
response_header	include/nsshttp.h	/^	http_response_header_t response_header;$/;"	m	struct:__anon7
scoot_ahead_to_right_token	src/nsstemplate.c	/^inline char *scoot_ahead_to_right_token(char *chunk) {$/;"	f
script_file	include/nsshttp.h	/^	char script_file[PATH_LENGTH];$/;"	m	struct:__anon7
script_path	include/nsshttp.h	/^	char script_path[PATH_LENGTH];$/;"	m	struct:__anon7
sm_delete	src/strmap.c	/^void sm_delete(StrMap *map)$/;"	f
sm_enum	src/strmap.c	/^int sm_enum(const StrMap *map, sm_enum_func enum_func, const void *obj)$/;"	f
sm_enum_func	include/strmap.h	/^typedef void(*sm_enum_func)(const char *key, const char *value, const void *obj);$/;"	t
sm_exists	src/strmap.c	/^int sm_exists(const StrMap *map, const char *key)$/;"	f
sm_get	src/strmap.c	/^int sm_get(const StrMap *map, const char *key, char *out_buf, unsigned int n_out_buf)$/;"	f
sm_get_count	src/strmap.c	/^int sm_get_count(const StrMap *map)$/;"	f
sm_new	src/strmap.c	/^StrMap * sm_new(unsigned int capacity)$/;"	f
sm_put	src/strmap.c	/^int sm_put(StrMap *map, const char *key, const char *value)$/;"	f
status	include/nsshttp.h	/^	http_status_t status;$/;"	m	struct:__anon5
status	include/nsshttp_status.h	/^	short status;$/;"	m	struct:__anon8
stream	include/nsshttp.h	/^	FILE* stream;$/;"	m	struct:__anon7
template_context_t	include/nsstemplate.h	/^} template_context_t;$/;"	t	typeref:struct:__anon10
template_error_t	include/nsstemplate.h	/^} template_error_t;$/;"	t	typeref:struct:__anon9
template_execute	src/nsstemplate.c	/^continue_t template_execute(template_context_t *ctx, FILE *outstream) {$/;"	f
template_file	include/nsstemplate.h	/^	char template_file[TPL_FILE_PATH_LENGTH];$/;"	m	struct:__anon10
template_finish	src/nsstemplate.c	/^continue_t template_finish(template_context_t *ctx) {$/;"	f
template_init	src/nsstemplate.c	/^continue_t template_init($/;"	f
template_set_error_to_errno	src/nsstemplate.c	/^void template_set_error_to_errno($/;"	f
templatefile	tests/template1.c	/^#define templatefile	/;"	d	file:
title	tests/template1.c	/^#define title	/;"	d	file:
value	include/nsshttp.h	/^	char value[CFG_QS_VALUE_LENGTH];$/;"	m	struct:__anon2
value	src/strmap.c	/^	char *value;$/;"	m	struct:Pair	file:
value_len	include/nsshttp.h	/^	int value_len;$/;"	m	struct:__anon2
